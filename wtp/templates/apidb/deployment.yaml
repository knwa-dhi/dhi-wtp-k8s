apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wtp.name" . }}-db-dpl
  labels:
    helm.sh/chart: {{ include "wtp.chart" . }}
    app.kubernetes.io/name: {{ include "wtp.name" . }}-db-dpl
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  # annotations:
  #   "helm.sh/hook": pre-install
  #   "helm.sh/hook-weight": "-1"
  #   "helm.sh/hook-delete-policy": before-hook-creation
spec:
  replicas: {{ default 1 .Values.wtpdb.replicaCount | int }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "wtp.name" . }}-db-dpl
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        helm.sh/chart: {{ include "wtp.chart" . }}
        app.kubernetes.io/name: {{ include "wtp.name" . }}-db-dpl
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      # securityContext:
      #   runAsUser: 1001
      #   fsGroup: 1001    
      # initContainers:
      # - name: fix-permissions
      #   image: busybox # docker.io/bitnami/minideb:buster
      #   securityContext:
      #     runAsUser: 0
      #     runAsGroup: 0
      #     # allowPrivilegeEscalation: true
      #   command:
      #     - /bin/sh
      #     - -c
      #     - |
      #       mkdir -p /bitnami/postgresql/data
      #       chmod 700 /bitnami/postgresql/data
      #       xargs chown -R hydro:hydro /bitnami/postgresql/data
      #   volumeMounts:
      #   - name: postgres-persistance-storage
      #     mountPath: /bitnami/postgresql
      containers:
      - name: {{ .Chart.Name }}-db
        image: "{{ .Values.wtpdb.postgresql.image.repository }}:{{ .Values.wtpdb.postgresql.image.tag | default "latest" }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_USER
          value: "{{ .Values.wtpdb.postgresql.username }}"
        - name: POSTGRES_PASSWORD
          value: "{{ .Values.wtpdb.postgresql.password }}"
        - name: POSTGRES_DB
          value: "postgres"
        - name: POSTGRESQL_VOLUME_DIR
          value: "/bitnami/postgresql"
        # - name: PGDATA
        #   value: "/bitnami/postgresql/data/pgdata"          
        volumeMounts:
        - mountPath: /bitnami/postgresql
          name: postgres-persistance-storage
      volumes:
        - name: postgres-persistance-storage
          persistentVolumeClaim:
            claimName: {{ include "wtp.name" . }}-postgres-pv-claim
