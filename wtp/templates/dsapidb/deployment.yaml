apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wtp.name" . }}-dsapidb-dpl
  labels:
    helm.sh/chart: {{ include "wtp.chart" . }}
    app.kubernetes.io/name: {{ include "wtp.name" . }}-dsapidb-dpl
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  # annotations:
  #   "helm.sh/hook": pre-install
  #   "helm.sh/hook-weight": "-2"
  #   "helm.sh/hook-delete-policy": before-hook-creation    
spec:
  replicas: {{ default 1 .Values.dsapidb.replicaCount | int }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "wtp.name" . }}-dsapidb-dpl
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        helm.sh/chart: {{ include "wtp.chart" . }}
        app.kubernetes.io/name: {{ include "wtp.name" . }}-dsapidb-dpl
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      # securityContext:
      #   runAsUser: 1001
      #   runAsGroup: 1001
      #   fsGroup: 1001    
      # initContainers:
      # - name: fix-permissions
      #   image: busybox
      #   securityContext:
      #     runAsUser: 0
      #     runAsGroup: 0
      #     # allowPrivilegeEscalation: true
      #   command:
      #     - /bin/sh
      #     - -c
      #     - |
      #       mkdir -p /var/lib/postgresql/data
      #       chmod 700 /var/lib/postgresql/data
      #       xargs chown -R 1001:1001 /var/lib/postgresql/data
      #   volumeMounts:
      #   - name: ds-postgres-persistance-storage
      #     mountPath: /var/lib/postgresql/data
      containers:
      - name: {{ .Chart.Name }}-dsapidb
        image: "{{ .Values.dsapidb.postgresql.image.repository }}:{{ .Values.dsapidb.postgresql.image.tag | default "latest" }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_USER
          value: "{{ .Values.dsapidb.postgresql.username }}"
        - name: POSTGRES_PASSWORD
          value: "{{ .Values.dsapidb.postgresql.password }}"
        - name: POSTGRES_DB
          value: "postgres"
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            # subPath: data
            name: ds-postgres-persistance-storage
          - name: postgre-initdb
            mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: ds-postgres-persistance-storage
          persistentVolumeClaim:
            claimName: {{ include "wtp.name" . }}-ds-postgres-pv-claim
        - name: postgre-initdb
          configMap:
            name: db-script-config
        # - name: script-volume
        #   emptyDir: {}