# Default values for wtp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

# Overrides registry credential.
imageCredentials:
  registry: dhiacrdev.azurecr.io
  username: dhiacrdev
  password: 5+OOK6govNjw2EeSZqvLopI9Swrr4FGt
  email: 

wtpdb:
  replicaCount: 1
  postgresql:
    enabled: true
    username: postgres
    password: 1234
    database: waterdss
    image:
      repository: docker.io/postgres  # bitnami/postgresql
      tag: "16"
      pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 5432
   
wtpapi:
  replicaCount: 1
    # Overrides the image version.
  image:
    repository: dhiacrdev.azurecr.io/wrd/waterdss-portal-api
    pullPolicy: IfNotPresent
    tag: "20240619.1-dev"
  containerPort: 80
  envs:
    - name: ASPNETCORE_ENVIRONMENT
      value: "Development"
    - name: ConnectionStrings__Default
      value: "Host=dhiwtp-db-svc;Port=5432;Username=postgres;Password=1234;Database=waterdss;Include Error Detail=true;"
    - name: App__CorsOrigins
      value: "https://wtp-frontend.hlc.com,https://wtp-routerapi.hlc.com,https://wtp-api.hlc.com"
    - name: App__WebUrl
      value: "https://wtp-frontend.hlc.com"
    - name: App__WorkspaceLandingPage
      value: "https://wtp-frontend.hlc.com/portal/workspaces/{0}"      
    - name: PortalInfo__Container
      value: "https://wtp-routerapi.hlc.com"
    - name: PortalInfo__Url
      value: "https://wtp-routerapi.hlc.com"
    - name: Authentication__OpenId__ClientId
      value: "Water Tools"
    - name: Authentication__OpenId__Authority
      value: ""
    - name: Authentication__OpenId__Api
      value: ""
    - name: PortalInfo__WorkspaceLandingPage
      value: "https://wtp-frontend.hlc.com/portal/workspaces/{0}"
    - name: PortalInfo__Dissemination__UnsubscribeLink
      value: "/subscriptions/unsubscribe?token={token}"
    - name: PortalInfo__Dissemination__ApprovalLink
      value: "/product/{product_id}/approval"
    - name: Authentication__JwtBearer__Issuer
      value: "https://wtp-frontend.hlc.com"
    - name: Authentication__JwtBearer__SecurityKey
      value: "WaterDssPortal_C421AAEE0D114E9CA"
    - name: Authentication__JwtBearer__IsEnabled
      value: "true"      
    - name: Twillio__WhatsApp__AccountSid
      value: "AC6c2442ee6b2e8627097abdc89ee01111"
    - name: Twillio__WhatsApp__AuthToken
      value: "f9546673b7fa5c6d6b1d5a91b1e76f18"
    - name: Twillio__WhatsApp__Channel
      value: "would-maybe"
    - name: Twillio__WhatsApp__FromPhoneNumber
      value: "+14155238886"
    - name: Token__Key
      value: "Rahasia7xBro?!"
    - name: Token__Issuer
      value: "https://wtp-frontend.hlc.com"
    - name: Token__Expire
      value: "2"
    - name: Token__Audience
      value: "https://wtp-frontend.hlc.com"
    - name: Authentication__OpenId__ClientSecret
      value: ""
    - name: DeploymentType
      value: "Kubernetes"
    - name: Sendgrid__Secret
      value: ""
    - name: PassPhrase
      value: "wrddev_portal_key"
    - name: DomainServices__Username
      value: demo_admin_to_be_deleted
    - name: DomainServices__Password
      value: webapi       
    - name: Authentication__OpenId__ValidateIssuer
      value: "true"
    - name: Authentication__OpenId__Scope
      value: "openid offline_access"
    - name: Authentication__OpenId__ResponseType
      value: "code"
    - name: Authentication__OpenId__IsEnabled
      value: "true"
    - name: Authentication__OpenId__CallbackPath
      value: "/authentication/callback"
  serviceAccount:
    create: true
    automount: true
    annotations: {}
    name: ""
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  securityContext: {}    
  resources: {}
  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  volumes: []
  volumeMounts: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

  service:
    type: ClusterIP    
    ports:
      - name: http
        targetport: http
        protocol: TCP
        port: 80  

wtprouterapi:
  replicaCount: 1
    # Overrides the image version.
  image:
    repository: dhiacrdev.azurecr.io/wrd/waterdss-portal-api-rerouter
    pullPolicy: IfNotPresent
    tag: "20240521.2-dev"
  envs:
    - name: ASPNETCORE_ENVIRONMENT
      value: "Production"
    - name: CORS_ORIGINS
      value: "https://wtp-frontend.hlc.com"
    - name: OCELOT_DOWNSTREAM_SCHEME
      value: "http"
    - name: OCELOT_DOWNSTREAM_HOST
      value: "dhiwtp-api-svc"
    - name: OCELOT_DOWNSTREAM_PORT
      value: "80"
  service:
      # name: wtp-routerapi-svc
      type: ClusterIP
      port: 80
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  podAnnotations: {}

frontend:
  replicaCount: 1
    # Overrides the image version.
  image:
    repository: dhiacrdev.azurecr.io/wrd/wrd-mike-mine
    pullPolicy: IfNotPresent
    tag: "20240612.2-dev"
  containerPorts: 
    - name: http
      containerPort: 80
      protocol: TCP          
  envs:
    - name: ASPNETCORE_ENVIRONMENT
      value: Production
    - name: ASPNETCORE_URLS
      value: "http://+:80"
    - name: Applications
      value: "mine;mine-result;mine-dashboard;subscriptions;workspaces;datamanagement;waterstatus;planningtools;mine-reco;mine-dama"
    - name: DefaultBaseURL
      value: "https://wtp-api.hlc.com"
    - name: DefaultBaseURLOld
      value: "https://wtp-routerapi.hlc.com"
    - name: DefaultBaseURLGateway
      value: "https://wtp-routerapi.hlc.com"
    - name: DefaultDomainServicesURL
      value: "https://wtp-dsapi.hlc.com"
    - name: DefaultBaseURLPy
      value: "https://wtp-pyapi.hlc.com"
    - name: ClientId
      value: "Water Tools"
    - name: Authority
      value: "https://login.mike-cloud-dev.com"
    - name: ContentDefaultSource
      value: "wtp-frontend.hlc.com;wtp-dsapi.hlc.com;api.mapbox.com;mapsapp.azurewebsites.net;simulations.azurewebsites.net;www.youtube.com"
    - name: ContentConnectSource
      value: "login.mike-cloud-dev.com;wtp-api.hlc.com;wtp-routerapi.hlc.com;wtp-dsapi.hlc.com;api.mapbox.com;events.mapbox.com;wtp-geoserver.hlc.com;ipv4.icanhazip.com;dhigroup.matomo.cloud; data:"
    - name: ContentImageSource
      value: "wtp-api.hlc.com;wtp-routerapi.hlc.com;api.mapbox.com;a.basemaps.cartocdn.com;b.basemaps.cartocdn.com;c.basemaps.cartocdn.com;d.basemaps.cartocdn.com"
    - name: ContentScriptSource
      value: "www.youtube.com;unpkg.com;api.mapbox.com;dhigroup.matomo.cloud "
    - name: ContentStyleSource
      value: "unpkg.com "
    - name: ContentFontSource
      value: "fonts.gstatic.com "
    - name: UseContentSecurityHeader
      value: "False"
    - name: ContentFrameAncestors
      value: "https://wtp-frontend.hlc.com"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 3000m
      memory: 4Gi
  service:
    type: ClusterIP
    ports:
      - name: http
        targetport: http
        protocol: TCP
        port: 80            

dsapidb:
  replicaCount: 1
  postgresql:
    enabled: true
    username: postgres
    password: 1234
    database: wrddomainservicesdb
    image:
      repository: docker.io/postgres
      tag: "16"
      pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 5432

dsapi:
  replicaCount: 1
    # Overrides the image version.
  image:
    repository: dhiacrdev.azurecr.io/wrd/wrd-domain-services
    pullPolicy: IfNotPresent
    tag: "20240213.1-dev"
  envs:
    - name: ASPNETCORE_ENVIRONMENT
      value: "Production"
    - name: ASPNETCORE_URLS
      value: "http://+:80"      
    - name: ConnectionStrings__DbConnectionString
      value: "Host=dhiwtp-dsapidb-svc;Port=5432;Username=postgres;Password=1234;Database=wrddomainservicesdb;Include Error Detail=true;"
    - name: ASPNETCORE_CONTENTROOT
      value: "/tmp"
    - name: Tokens__PublicRSAKey
      value: "<RSAKeyValue><Modulus>z0jOdV64Get5/XdplajSGI2ZD0DyE1Al+MZBMf8ZUFD5PnJZwGhVcqYl6w2wbJV1KTLYyaamD4K4XC3X7APTKTs/wsCri8KsHtePJUUp9mjc1wqJL9TO/z/cqc6I6s8F8ZvOmX/nzNv8K28dA8wy9zHpDb4HMssZeduzS1VWEw/Qry7K68+Yq1MzNXKySO76ZCf6eeb7thMURnlNYff6nX3FfCDG+2miApUjac/tIcaKH2jeN3e7sT6tr6pkS35yHNbS2YH+ONOuTQUcFOINnxCTneGorv8E02M+22b+B6LPYuzu7mh/izFiaww3URhH7/n0Z40hnziAaP185qccTQ==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>"
    - name: Tokens__PrivateRSAKey
      value: "<RSAKeyValue><Modulus>z0jOdV64Get5/XdplajSGI2ZD0DyE1Al+MZBMf8ZUFD5PnJZwGhVcqYl6w2wbJV1KTLYyaamD4K4XC3X7APTKTs/wsCri8KsHtePJUUp9mjc1wqJL9TO/z/cqc6I6s8F8ZvOmX/nzNv8K28dA8wy9zHpDb4HMssZeduzS1VWEw/Qry7K68+Yq1MzNXKySO76ZCf6eeb7thMURnlNYff6nX3FfCDG+2miApUjac/tIcaKH2jeN3e7sT6tr6pkS35yHNbS2YH+ONOuTQUcFOINnxCTneGorv8E02M+22b+B6LPYuzu7mh/izFiaww3URhH7/n0Z40hnziAaP185qccTQ==</Modulus><Exponent>AQAB</Exponent><P>2NLHv7wMFKPGqMj3kgyqtUXdEmgK0MUpHrRa/RZ4VlVTrCPIiU/9Imzq8jSaB+e13S29xDqCtDQJhP4mddLt9E/IFxH66vkbvXSAdoiYeRx07QtDgbBKTyreBEnaxK0Y5DPppypXqTl+HwIz16P2RrUyR/ZDU0V/Rs2Y9WTc48c=</P><Q>9LzMlxalBTWHNcCStnJDhhc7np+awCkXL/D50xY6A08FTX532ORYnMZWD3tVHTMNESIas143vopnsb2nfhMDymHEDgC0LLloeG2LsWvQ1ztRoMq6RLbS3IeAsIwu8Pa+96yMdXHppbYqmaJEMTp51+TAH+P39ZSYNJAaTOe6l0s=</Q><DP>SN7+dzgyLzWj7NIuMo3DSc1DMY56JBQ/b6xZ8Dl/FDT1PCOCoHObtdg5VlHLeuCrRLy8zJiFmR7sHCB2uJ69jqDJtMc8N4CljBT9n9jktb+UpJ5mf83KC7VyjKpttjAe74NrAd2/PIawFqfc2JqoiLcZQQpJMlFnJ1quD7toab0=</DP><DQ>Y3mx9t9/Z6SgNpr1hy7ef0xGMW1SKzUIdbYO9VudbObbkuoKsJ/v3JlJNbW9nMa5UvN3wtxS8CG1kCs0PyxfaA1g8QgcM+mQqxJrq0vVcQZtYVvFZlShVH3HMvtnwQ2qBWWfGcWZYH+wxQ2NhizshXI3HT899BXX39WKuyOdVg0=</DQ><InverseQ>wa/Lk/u4G27cNg7R9DmlyYGD8wTC6RhPYYSW8Nokp3b2D90LkQD9l3lPjKH3+06RGUIjOzRvkepa32wH7pqxUAsWYOCf3UxhDcVWkIt5NskBcz/EKWNbhyM4cbN02yjzYHRVdA7wOJ0ErCplKROWkhtBXPAv2AGsNYcO6eBTHeU=</InverseQ><D>THSxWk9mnoDhjSE3e7E6VT4dP6gX4hHE/764m2VZg+tqE6OAAV06b0BjahCxi0uRXHHZzn8+bygrMizioLZEc8fb28zPOYzDidi+fuPE95N0KYlEUrUu6K04ihWZIOrdaWGr0aiA6moV2Dtyu0zdW5o4OQ5nf0+0hOMJffbq+bpIYqbIvd8mrfazZXkjVBP0Yfk8gP0qEqxmoupfmH+nQV5WJnYDFf76wLhqfDIx9YxaMzQy9cghmRU6E/ayKnK8Vw3DjTuLNe0oIGTVPwjp39qoyTL/6r2eJfSTqCjhI5XfPbbwGsdDwYql/I35l+b44DeGmzWePA/S2Xg2p06ujQ==</D></RSAKeyValue>"
    - name: Swagger__SpecificationName
      value: "WaterDssHostAPIOpenAPISpecification"
    - name: Swagger__DocumentName
      value: "WaterDSS DomainServices"
    - name: Swagger__DocumentTitle
      value: "WaterDSS DomainServices"
    - name: Swagger__DocumentDescription
      value: "SwaggerInfo.md"
    - name: CORS
      value: "wtp-frontend.hlc.com"
  service:
      type: ClusterIP
      port: 80
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  podAnnotations: {}

pyapi:
  replicaCount: 1
    # Overrides the image version.
  image:
    repository: dhiacrdev.azurecr.io/wrd/wrdmainservices
    pullPolicy: IfNotPresent
    tag: "20240618.1-dev"
  envs:
  service:
      type: ClusterIP
      port: 80
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  podAnnotations: {}
  volume:
    hostPath: /water-status-data/water-status-config

geoserver:
  replicaCount: 1
    # Overrides the image version.
  image:
    repository: docker.io/kartoza/geoserver
    pullPolicy: IfNotPresent
    tag: "2.23.2"
  envs:
    - name: COMMUNITY_EXTENSIONS
      value: "cog-plugin"
    - name: GEOSERVER_ADMIN_PASSWORD
      value: "win!geoserver2023"
    - name: GEOSERVER_ADMIN_USER
      value: "dhi-admin"
    - name: GEOSERVER_DATA_DIR
      value: "/opt/geoserver/data_dir"
    - name: HTTP_PROXY_NAME
      value: "wtp-geoserver.hlc.com"
    - name: HTTP_SCHEME
      value: "https"
    - name: SSL
      value: "true"
    - name: STABLE_EXTENSIONS
      value: "css-plugin,feature-pregeneralized-plugin,netcdf-plugin"
    - name: WEBSITE_HTTPLOGGING_RETENTION_DAYS
      value: "7"
    - name: WEBSITES_CONTAINER_START_TIME
      value: "1800"      
    - name: WEBSITES_ENABLE_APP_SERVICE_STORAGE
      value: "true"
    - name: XFRAME_OPTIONS
      value: "false"           
  service:
    type: ClusterIP
    port: 80
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  podAnnotations: 
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-expires: "5"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "5"
  volume:
    hostPath: /water-status-data/geoserver
    rasterHostPath: /water-status-data/data-geoserver

xample:
  replicaCount: 1
  image:
    repository: docker.io/nginxdemos/hello
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
      # name: wtp-routerapi-svc
      type: ClusterIP
      port: 80


ingress:
  enabled: true
  className: "nginx"
  annotations: 
    # cert-manager.io/cluster-issuer: "selfsigned-issuer"
    # cert-manager.io/issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
    # nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: /    
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: wtp-api.hlc.com
      paths:
        - path: /
          pathType: Prefix
          service:
            name: dhiwtp-api-svc
            port: 80
    - host: wtp-routerapi.hlc.com
      paths:
        - path: /
          pathType: Prefix
          service:
            name: dhiwtp-routerapi-svc
            port: 80            
    - host: wtp-frontend.hlc.com
      paths:
        - path: /
          pathType: Prefix
          service:
            name: dhiwtp-frontend-svc
            port: 80      
    - host: wtp-db.hlc.com
      paths:
        - path: /
          pathType: Prefix
          service:
            name: dhiwtp-db-svc
            port: 5432                 
    - host: wtp-dsdb.hlc.com
      paths:
        - path: /
          pathType: Prefix
          service:
            name: dhiwtp-dsapidb-svc
            port: 5432
    - host: wtp-dsapi.hlc.com
      paths:
        - path: /
          pathType: Prefix
          service:
            name: dhiwtp-dsapi-svc
            port: 80         
    - host: wtp-pyapi.hlc.com
      paths:
        - path: /
          pathType: Prefix
          service:
            name: dhiwtp-pyapi-svc
            port: 80          
    - host: wtp-geoserver.hlc.com
      paths:
        - path: /
          pathType: Prefix
          service:
            name: dhiwtp-geoserver-svc
            port: 80         
    - host: xample.hlc.com
      paths:
        - path: /
          pathType: Prefix
          service:
            name: dhiwtp-xample-svc
            port: 80                        
  # tls: #[]
  #  - secretName: dhiwtp-tls
  # #  - secretName: letsencrypt-staging-tls
  #    hosts:
  #     - "*.hlc.com"

cert-manager: #defined by either the name or alias of your dependency in Chart.yaml
  enabled: false
  # namespace: cert-manager
  # installCRDs: true
